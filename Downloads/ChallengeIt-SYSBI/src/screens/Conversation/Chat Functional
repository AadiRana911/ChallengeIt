import React, {useState, useRef, useCallback} from 'react';
// import {
//   Text,
//   View,
//   SafeAreaView,
//   FlatList,
//   StyleSheet,
//   TextInput,
// } from 'react-native';
// import {Header} from 'react-native-elements';
// import Entypo from 'react-native-vector-icons/Entypo';
// import AntDesign from 'react-native-vector-icons/AntDesign';
// import SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';
// import {Fonts} from '../../utils/Fonts';
// import Ionicons from 'react-native-vector-icons/Ionicons';
// import {primaryColor} from '../../components/colors';
// import OptionsMenu from 'react-native-options-menu';
// import EmojiSelector, {Categories} from 'react-native-emoji-selector';
// import RBSheet from 'react-native-raw-bottom-sheet';
// import {useFocusEffect} from '@react-navigation/native';
// import Moment from 'moment';
// import {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';

// //redux
// import {connect} from 'react-redux';
// import {sendMsg, getConvo} from '../../redux/actions/app';

// const Conversation = ({
//   navigation,
//   route,
//   sendMsg,
//   token,
//   getConvo,
//   conversation,
//   user,
// }) => {
//   const [message, setMsg] = useState('');
//   const [popupEmoji, setPopup] = useState(false);
//   const [emoji, setEmoji] = useState('');
//   const name = route.params && route.params.name;
//   const id = route.params && route.params.id;
//   const emojiRef = useRef(null);
//   const flatlistRef = useRef(null);
//   const [messages, setMessages] = useState([]);

//   useFocusEffect(
//     useCallback(() => {
//       const unsubscribe = getConversation();
//       return () => unsubscribe;
//     }, []),
//   );

//   const sendMessage = () => {
//     let msg = {
//       recv_id: id,
//       send_id: user.u_id,
//       content: message,
//       date: new Date(),
//     };
//     let newList = [...messages];
//     newList.push(msg);
//     setMessages(newList);
//     const formData = new FormData();
//     formData.append('recv_id', id);
//     formData.append('send_id', user.u_id);
//     formData.append('content', message);
//     setMsg('');
//     new Promise((rsl, rej) => {
//       sendMsg(formData, 'c4ca4238a0b923820dcc509a6f75849b', rsl, rej);
//     })
//       .then((res) => {
//         console.log(res);
//       })
//       .catch((err) => {
//         console.log(err);
//       });
//   };
//   const getConversation = () => {
//     const formData = new FormData();
//     formData.append('recv_id', id);
//     console.log(formData);
//     new Promise((rsl, rej) => {
//       getConvo(formData, token, rsl, rej);
//     })
//       .then((res) => {
//         setMessages(conversation);
//       })
//       .catch((err) => {
//         console.log(err);
//       });
//   };
//   const renderItem = ({item, index}) => {
//     return (
//       <View key={index}>
//         <View
//           style={{
//             padding: 10,
//             justifyContent: 'center',
//             alignItems: 'center',
//             margin: 10,
//             borderBottomRightRadius: item.send_id === item.userId ? 20 : 0,
//             borderTopRightRadius: item.send_id === item.userId ? 30 : 20,
//             borderBottomLeftRadius: item.send_id === item.userId ? 0 : 20,
//             borderTopLeftRadius: item.recv_id === item.userId ? 20 : 20,
//             alignSelf: item.send_id === item.userId ? 'flex-start' : 'flex-end',
//             backgroundColor:
//               item.send_id === item.userId ? '#5C6C96' : primaryColor,
//           }}>
//           <Text
//             style={{
//               textAlign: item.send_id === item.userId ? 'left' : 'right',
//               color: '#fff',
//             }}>
//             {item.content}
//           </Text>
//         </View>
//         <Text
//           style={{
//             textAlign: item.send_id === item.userId ? 'left' : 'right',
//             color: item.send_id === item.userId ? '#000' : '#000',
//             fontSize: 12,
//             //padding: 10,
//             margin: 10,
//             marginTop: 0,
//           }}>
//           {Moment(item.date).format('LT')}
//         </Text>
//       </View>
//     );
//   };
//   return (
//     // <SafeAreaView style={{flex: 1, backgroundColor: 'white'}}>
//     //   <Header
//     //     backgroundColor="white"
//     //     containerStyle={{paddingTop: 0}}
//     //     rightComponent={
//     //       <OptionsMenu
//     //         customButton={<SimpleLineIcons name="options-vertical" size={20} />}
//     //         options={['Block', 'Report']}
//     //         actions={[
//     //           () => {
//     //             alert('Blocked');
//     //           },
//     //           () => {
//     //             alert('Reported');
//     //           },
//     //         ]}
//     //       />
//     //     }
//     //     leftComponent={
//     //       <AntDesign
//     //         name="arrowleft"
//     //         size={25}
//     //         onPress={() => {
//     //           navigation.goBack();
//     //         }}
//     //       />
//     //     }
//     //     centerComponent={
//     //       <Text style={{fontFamily: Fonts.CenturyBold}}>{name}</Text>
//     //     }
//     //     containerStyle={{
//     //       borderBottomWidth: 0.5,
//     //       borderBottomColor: 'gray',
//     //       paddingTop: 0,
//     //       height: 70,
//     //     }}
//     //   />
//     <View style={{flexGorw: 1, flex: 1}}>
//       <FlatList
//         ref={(ref) => (this.flatList = ref)}
//         onContentSizeChange={() => this.flatList.scrollToEnd({animated: true})}
//         onLayout={() => this.flatList.scrollToEnd({animated: true})}
//         contentContainerStyle={{marginBottom: 20}}
//         onContentSizeChange={() => {
//           flatlistRef.scrollToEnd({animated: true});
//         }}
//         data={messages}
//         keyExtractor={(item) => item}
//         renderItem={renderItem}
//       />

//       <View style={styles.bottom}>
//         <TextInput
//           placeholder="Send a message"
//           style={styles.input}
//           value={message}
//           onChangeText={(e) => {
//             setMsg(e);
//           }}
//         />
//         <View
//           style={{
//             flexDirection: 'row',
//             width: '20%',
//             justifyContent: 'space-between',
//           }}>
//           <Entypo
//             onPress={() => {
//               emojiRef.current.open();
//             }}
//             name="emoji-happy"
//             size={20}
//             style={{alignSelf: 'center', marginRight: 5}}
//           />

//           <Ionicons
//             onPress={() => message !== '' && sendMessage()}
//             name="ios-send"
//             size={20}
//             color={primaryColor}
//             style={{alignSelf: 'center', marginRight: 4}}
//           />
//         </View>
//       </View>
//     </View>
//     //   {/*
//     //   <RBSheet
//     //     ref={emojiRef}
//     //     height={400}
//     //     openDuration={250}
//     //     customStyles={{
//     //       container: {
//     //         borderTopRightRadius: 30,
//     //         borderTopLeftRadius: 30,
//     //         // paddingTop: 10,
//     //       },
//     //     }}>
//     //     <EmojiSelector
//     //       category={Categories.all}
//     //       showSearchBar={false}
//     //       onEmojiSelected={(emoji) => {
//     //         emojiRef.current.close();
//     //         setEmoji(emoji);
//     //       }}
//     //       showHistory
//     //       columns={11}
//     //       showSearchBar
//     //     />
//     //   </RBSheet> */}
//     // </SafeAreaView>
//   );
// };
// const mapStateToProps = (state) => {
//   const {token, user} = state.auth;
//   const {conversation} = state.app;
//   return {token, conversation, user};
// };
// export default connect(mapStateToProps, {sendMsg, getConvo})(Conversation);
// const styles = StyleSheet.create({
//   bottom: {
//     width: '100%',
//     flexDirection: 'row',
//     borderTopWidth: 0.3,
//     justifyContent: 'space-between',
//     padding: 5,
//   },
//   emojiCotainer: {
//     alignSelf: 'flex-end',
//     justifyContent: 'flex-end',
//     minHeight: 300,
//   },
//   input: {
//     width: '80%',
//     padding: 10,
//   },
// });
